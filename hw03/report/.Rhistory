library(XML)
er = xmlParse("http://www.ecb.europa.eu/stats/eurofxref/eurofxref-hist.xml")
erRoot = xmlRoot(er)
xmlSize(erRoot)
names(erRoot)
xmlSize(erRoot[["Cube"]])
all(names(erRoot[["Cube"]]) == "Cube")
erRoot
xmlSize(erRoot[["Cube"]])
all(names(erRoot[["Cube"]]) == "Cube")
?rep
numDays = nrow(dailyRates)
dailyRatesDF = data.frame(
rate = as.numeric(dailyRates),
day = rep(dayz, length(currs)),
currency = rep(currs, each = numDays)
)
# Chunk 1
library(XML)
er = xmlParse("http://www.ecb.europa.eu/stats/eurofxref/eurofxref-hist.xml")
# Chunk 2
erRoot = xmlRoot(er)
# Chunk 3
xmlSize(erRoot)
names(erRoot)
# Chunk 4
xmlSize(erRoot[["Cube"]])
all(names(erRoot[["Cube"]]) == "Cube")
# Chunk 5
erRoot[['Cube']][1]
# Chunk 6
gbp_nodes =
getNodeSet(erRoot, '//x:Cube[@currency = "GBP"]',
namespaces = "x")
# Chunk 7
gbp1 = xmlSApply(gbp_nodes, xmlGetAttr, "rate")
# Chunk 8
head(gbp1)
length(gbp1)
class(gbp1)
# Chunk 9
gbp2 =
xpathSApply(erRoot, '//x:Cube[@currency = "GBP"]',
xmlGetAttr, "rate", namespaces = "x")
# Chunk 10
identical(gbp1, gbp2)
# Chunk 11
days = xpathSApply(erRoot, '//x:Cube[@time]',
xmlGetAttr, "time", namespaces = "x")
# Chunk 12
head(days)
dayz = as.Date(days)
# Chunk 13
length(dayz) == length(gbp1)
# Chunk 14
libraray(ggplot)
Rates = data.frame(gbp = as.numeric(gbp1), dayz)
ggplot(data = Rates, aes(x = dayz, y = gbp)) +
geom_line() +
labs(title ="GBP Daily Exchange Rates (against Euro)",
x = "Date",
y = "Exchange Rate")
# Chunk 15
getExchangeRates = function(abbrev, root) {
# create the expression
currency_path =
sprintf('//x:Cube[@currency = "%s"]', abbrev)
# extract the rates
rates = xpathSApply(root, currency_path,
xmlGetAttr, "rate", namespaces = "x")
return(as.numeric(rates))
}
# Chunk 16
currs = c("GBP", "USD", "CAD", "JPY")
dailyRates = sapply(currs, getExchangeRates,
root = erRoot)
# Chunk 17
numDays = nrow(dailyRates)
dailyRatesDF = data.frame(
rate = as.numeric(dailyRates),
day = rep(dayz, length(currs)),
currency = rep(currs, each = numDays)
)
# Chunk 18
dailyRatesDF$ratenorm =
dailyRatesDF$rate / rep(dailyRates[numDays,], each = numDays)
ggplot(data = dailyRatesDF,
aes(x = day, y = ratenorm, color = currency)) +
geom_line() +
labs(title = "Daily Exchange Rates (against Euro,)",
x = "Date",
y = "Exchange Rate (normalized to rate on 1/4/1999)")
# Chunk 19
cny = getExchangeRates(root = erRoot, abbrev = "CNY")
cnyDays = xpathSApply(erRoot, 'FILL IN',
xmlGetAttr, "time",
namespaces = "x")
